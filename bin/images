#!/usr/bin/env python3

import sys, os, logging, json, configparser
from argparse import ArgumentParser
from bottle import Bottle, debug, template, static_file, request, redirect, HTTPError, auth_basic


# Options
parser = ArgumentParser(usage="images")
parser.add_argument('-c', '--config', default=os.getenv('IMAGES_CONFIG', 'images.ini'),
    help='specify what config file to run on')
parser.add_argument('-g', '--debug', action="store_true",
    help='show debug messages')


args = parser.parse_args()
config = configparser.ConfigParser()
config.read(args.config)
FORMAT = '%(asctime)s [%(threadName)s] %(filename)s +%(levelno)s %(funcName)s %(levelname)s %(message)s'
logging.basicConfig(level=(logging.DEBUG if args.debug else logging.INFO), format=FORMAT)


# Loading modules
logging.info("Loading modules...")
from images.database import init
from images import api, scanner, location, entry, tag, user, import_job, image
from images.user import authenticate, no_guests
logging.info("Loading modules done.")


# Setting up the database
sql_path = config['Database']['path']
db = init(sql_path)


# Setting up threads
scanner_manager = scanner.ScannerManager()
import_manager = import_job.ImportManager()


# Mounting all APIs
root_app = Bottle()
api.mount_all(root_app)


@root_app.get('/')
@auth_basic(authenticate)
def get_index():
    return static_file("index.html", root='public')

@root_app.get('/manage')
@auth_basic(authenticate)
@no_guests()
def get_index():
    return static_file("manage.html", root='public')

@root_app.get('/<file>.html')
def get_html(file):
    return static_file(file + '.html', root='public/js')


@root_app.get('/js/<file>.js')
def get_js(file):
    return static_file(file + '.js', root='public/js')


@root_app.get('/css/<file>.css')
def get_css(file):
    return static_file(file + '.css', root='public/css')


#@root_app.get('/css/images/<file>.png')
#def get_css(file):
#    return static_file(file + '.png', root='public/jquery-ui-images')



debug(True)
root_app.run(host='0.0.0.0')
